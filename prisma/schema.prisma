
generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{
  id                        String  @id @default(cuid())
  name                      String
  phoneNumber               String
  email                     String  
  gender                    String?
  starSeedOrigin            String?
  galasticMission           String?
  about                     String?
  password                  String
  age                       String?
  location                  String?
  accountStatus             Boolean @default(false)
  avatar                    String?

  createdAt                DateTime @default(now())
  deletedAt                DateTime? @default(now())
  updatedAt                DateTime @default(now())

  interest  UserInterest[]
  ucode     Ucode[]
  images    Images[]

  @@map("users")
}

model UserInterest{
  @@id([userId, interestId])

  userId           String
  interestId       String

  user       User         @relation(fields: [userId], references: [id])
  interest   Interest     @relation(fields: [interestId], references: [id])

}

model Interest{
  id                        String  @id @default(cuid())
  interestItem              String  @unique

  createdAt                DateTime   @default(now())
  updatedAt                DateTime   @default(now())
  deltedAt                 DateTime?  @default(now())

  user  UserInterest[]
}

model Images{
  id                        String @id @default(cuid())
  userId                    String
  imagefile                 String

  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model Ucode{
  id                        String @id @default(cuid())
  userId                    String 
  email                     String
  otp                       String
  expireAt                  DateTime

  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @default(now())

  user    User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("ucodes")
}